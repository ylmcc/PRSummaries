{
  "version": 3,
  "sources": ["../dist-src/index.js", "../dist-src/version.js"],
  "sourcesContent": ["import { RequestError } from \"@octokit/request-error\";\nimport { VERSION } from \"./version\";\nfunction enterpriseCompatibility(octokit) {\n  octokit.hook.wrap(\"request\", async (request, options) => {\n    if (/\\/orgs\\/[^/]+\\/teams/.test(options.url)) {\n      try {\n        return await request(options);\n      } catch (error) {\n        if (error.status !== 404) {\n          throw error;\n        }\n        if (!error.response || !error.response.headers[\"x-github-enterprise-version\"]) {\n          throw error;\n        }\n        const deprecatedUrl = options.url.replace(\n          /\\/orgs\\/[^/]+\\/teams\\/[^/]+/,\n          \"/teams/{team_id}\"\n        );\n        throw new RequestError(\n          `\"${options.method} ${options.url}\" is not supported in your GitHub Enterprise Server version. Please replace with octokit.request(\"${options.method} ${deprecatedUrl}\", { team_id })`,\n          404,\n          {\n            request: options\n          }\n        );\n      }\n    }\n    return request(options);\n  });\n}\nenterpriseCompatibility.VERSION = VERSION;\nexport {\n  enterpriseCompatibility\n};\n", "const VERSION = \"4.1.0\";\nexport {\n  VERSION\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA6B;;;ACA7B,IAAM,UAAU;;;ADEhB,SAAS,wBAAwB,SAAS;AACxC,UAAQ,KAAK,KAAK,WAAW,OAAO,SAAS,YAAY;AACvD,QAAI,uBAAuB,KAAK,QAAQ,GAAG,GAAG;AAC5C,UAAI;AACF,eAAO,MAAM,QAAQ,OAAO;AAAA,MAC9B,SAAS,OAAO;AACd,YAAI,MAAM,WAAW,KAAK;AACxB,gBAAM;AAAA,QACR;AACA,YAAI,CAAC,MAAM,YAAY,CAAC,MAAM,SAAS,QAAQ,6BAA6B,GAAG;AAC7E,gBAAM;AAAA,QACR;AACA,cAAM,gBAAgB,QAAQ,IAAI;AAAA,UAChC;AAAA,UACA;AAAA,QACF;AACA,cAAM,IAAI;AAAA,UACR,IAAI,QAAQ,MAAM,IAAI,QAAQ,GAAG,qGAAqG,QAAQ,MAAM,IAAI,aAAa;AAAA,UACrK;AAAA,UACA;AAAA,YACE,SAAS;AAAA,UACX;AAAA,QACF;AAAA,MACF;AAAA,IACF;AACA,WAAO,QAAQ,OAAO;AAAA,EACxB,CAAC;AACH;AACA,wBAAwB,UAAU;",
  "names": []
}
