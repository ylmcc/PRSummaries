import { Octokit } from "@octokit/core";
import { getConfigFile } from "./get-config-file";
import { extendsToGetContentParams } from "./extends-to-get-content-params";
async function getConfigFiles(octokit, { owner, repo, path, branch }) {
  const requestedRepoFile = await getConfigFile(octokit, {
    owner,
    repo,
    path,
    ref: branch
  });
  const files = [requestedRepoFile];
  if (!requestedRepoFile.config) {
    if (repo === ".github") {
      return files;
    }
    const defaultRepoConfig = await getConfigFile(octokit, {
      owner,
      repo: ".github",
      path
    });
    files.push(defaultRepoConfig);
  }
  const file = files[files.length - 1];
  if (!file.config || !file.config._extends) {
    return files;
  }
  let extendConfigOptions = extendsToGetContentParams({
    owner,
    path,
    url: file.url,
    extendsValue: file.config._extends
  });
  delete file.config._extends;
  do {
    const extendRepoConfig = await getConfigFile(octokit, extendConfigOptions);
    files.push(extendRepoConfig);
    if (!extendRepoConfig.config || !extendRepoConfig.config._extends) {
      return files;
    }
    extendConfigOptions = extendsToGetContentParams({
      owner,
      path,
      url: extendRepoConfig.url,
      extendsValue: extendRepoConfig.config._extends
    });
    delete extendRepoConfig.config._extends;
    const alreadyLoaded = files.find(
      (file2) => file2.owner === extendConfigOptions.owner && file2.repo === extendConfigOptions.repo && file2.path === extendConfigOptions.path
    );
    if (alreadyLoaded) {
      throw new Error(
        `[@probot/octokit-plugin-config] Recursion detected. Ignoring  "_extends: ${extendRepoConfig.config._extends}" from ${extendRepoConfig.url} because ${alreadyLoaded.url} was already loaded.`
      );
    }
  } while (true);
}
export {
  getConfigFiles
};
